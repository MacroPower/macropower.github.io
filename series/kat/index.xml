<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kat on Jacob Colvin</title><link>https://jacobcolvin.com/series/kat/</link><description>Recent content in Kat on Jacob Colvin</description><generator>Hugo</generator><language>en</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Sun, 13 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://jacobcolvin.com/series/kat/index.xml" rel="self" type="application/rss+xml"/><item><title>Introducing kat: A TUI and rule-based rendering engine for Kubernetes manifests</title><link>https://jacobcolvin.com/posts/2025/07/introducing-kat-a-tui-and-rule-based-rendering-engine-for-kubernetes-manifests/</link><pubDate>Sun, 13 Jul 2025 00:00:00 +0000</pubDate><guid>https://jacobcolvin.com/posts/2025/07/introducing-kat-a-tui-and-rule-based-rendering-engine-for-kubernetes-manifests/</guid><description>&lt;p>I don&amp;rsquo;t know about you, but one of my favorite tools in the Kubernetes ecosystem is &lt;a href="https://k9scli.io/">&lt;code>k9s&lt;/code>&lt;/a>. It&amp;rsquo;s a terminal UI (TUI) for interacting with your Kubernetes clusters, and at work I have it open pretty much all of the time. After I started using it, I felt like my productivity skyrocketed, since anything you could want is just a few keystrokes away.&lt;/p>
&lt;p>However, when it comes to rendering and validating manifests locally, I found myself frustrated with the existing tools (or lack thereof). For me, I found that working with manifest generators like &lt;code>helm&lt;/code> or &lt;code>kustomize&lt;/code> often involved a repetitive cycle:&lt;/p></description></item></channel></rss>