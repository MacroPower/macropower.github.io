<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>K8s on Jacob Colvin</title><link>https://jacobcolvin.com/categories/k8s/</link><description>Recent content in K8s on Jacob Colvin</description><generator>Hugo</generator><language>en</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Mon, 03 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://jacobcolvin.com/categories/k8s/index.xml" rel="self" type="application/rss+xml"/><item><title>Linkerd Multi-cluster Without a Public IP Address</title><link>https://jacobcolvin.com/posts/2023/04/linkerd-multi-cluster-without-a-public-ip-address/</link><pubDate>Mon, 03 Apr 2023 00:00:00 +0000</pubDate><guid>https://jacobcolvin.com/posts/2023/04/linkerd-multi-cluster-without-a-public-ip-address/</guid><description>&lt;p>Recently, I&amp;rsquo;ve set up &lt;a href="https://github.com/linkerd/linkerd2">Linkerd&lt;/a> in my homelab, and one of
the features I was really interested in was &lt;a href="https://linkerd.io/2.12/tasks/multicluster/">multi-cluster communication&lt;/a>.
This allows you to mirror services between clusters. Meaning, apps in one
cluster can communicate with services in another cluster, as if they were in the
same cluster.&lt;/p>
&lt;p>Setting up multi-cluster communication with Linkerd is straightforward under
ideal conditions. However, it can be more challenging if one of the clusters
cannot create services of type &lt;code>LoadBalancer&lt;/code> (with a public, or otherwise
routable IP address). This is the case for me, as I have clusters both at home
and in Hetzner, with my home Kubernetes cluster running behind NAT.&lt;/p></description></item><item><title>Building a Twin-ITX Cluster</title><link>https://jacobcolvin.com/posts/2023/04/building-a-twin-itx-cluster/</link><pubDate>Sun, 02 Apr 2023 00:00:00 +0000</pubDate><guid>https://jacobcolvin.com/posts/2023/04/building-a-twin-itx-cluster/</guid><description>&lt;p>I am building a cluster that includes a &lt;a href="https://turingpi.com/">Turing Pi&lt;/a> (a
mini-ITX cluster board), alongside a normal mini-ITX system. I wanted to put
both of these in a single chassis to save space, which is possible with a &amp;ldquo;dual
mini-itx&amp;rdquo;, or &amp;ldquo;twin-itx&amp;rdquo; chassis. This article covers most of the chassis I
discovered.&lt;/p>
&lt;p>As of writing, I have made a purchase (I went with the MyElectronics chassis)
and am waiting for it to arrive. I will eventually be writing another article
covering my exact setup.&lt;/p></description></item><item><title>Backups for K8s and Beyond</title><link>https://jacobcolvin.com/posts/2023/01/backups-for-k8s-and-beyond/</link><pubDate>Thu, 05 Jan 2023 00:00:00 +0000</pubDate><guid>https://jacobcolvin.com/posts/2023/01/backups-for-k8s-and-beyond/</guid><description>&lt;h2 id="intro">Intro&lt;/h2>
&lt;p>Recently I have been moving my &lt;a href="https://github.com/MacroPower/homelab">homelab&lt;/a> to Kubernetes. This has
presented the need for a backup solution for any persistent data I might have
there. For quite some time, I have been using &lt;a href="https://github.com/duplicati/duplicati">Duplicati&lt;/a> for my
backups, but I haven&amp;rsquo;t been completely content with its performance, and have
heard many horror stories of restores not working properly. So, I wanted to take
this opportunity to find a backup solution that worked well for my personal
computers (I have Windows, Linux, and Darwin hosts), my storage servers (UnRaid
and FreeNAS), as well as Kubernetes. Assuming that such a solution exists, of
course!&lt;/p></description></item></channel></rss>